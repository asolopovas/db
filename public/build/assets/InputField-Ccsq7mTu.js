import{d as v,E as g,C as o,ay as k,e as n,o as i,k as r,f as c,h as p,u as m,s as f,N as S,az as h}from"./app-CZIMIw-m.js";const B={class:"input-wrap mb-2"},N={key:0,class:"input-label inline-block font-semibold mb-1"},w={class:"input-field-wrap"},C=["type","disabled"],q={key:1,class:"input-alert"},D=v({__name:"InputField",props:{set:{type:String,required:!0},cast:{type:String,default:"text"},disabled:{type:Boolean,default:!1},loc:{type:String,required:!0},labelOn:{type:Boolean,default:!0},alerts:{type:Array,default:()=>[]},format:{type:Function,default:e=>e},model:{type:String,default:e=>e.loc.split(".").pop()},label:{type:String,default:e=>e.loc.split(".").pop()}},setup(e){const l=e,u=g(),a=o({get:()=>l.format(k(u.state,l.loc,null)),set:t=>{const s=l.loc.split(".").pop();u.commit(l.set,{value:t,loc:s})}}),d=o({get:()=>a.value===""?"":l.cast==="number"?Number(a.value):a.value,set:t=>{t===""||t===0?a.value="":a.value=l.cast==="number"?Number(t):t}}),b=o(()=>!a.value);return(t,s)=>(i(),n("div",B,[e.labelOn?(i(),n("label",N,p(m(f)(e.label)),1)):r("",!0),c("div",w,[S(c("input",{"onUpdate:modelValue":s[0]||(s[0]=y=>d.value=y),type:e.cast,disabled:e.disabled,class:"input-field block w-full p-2"},null,8,C),[[h,d.value]])]),e.alerts.includes(e.model)&&b.value?(i(),n("div",q,p(m(f)(e.model))+" field is required ",1)):r("",!0)]))}});export{D as default};
